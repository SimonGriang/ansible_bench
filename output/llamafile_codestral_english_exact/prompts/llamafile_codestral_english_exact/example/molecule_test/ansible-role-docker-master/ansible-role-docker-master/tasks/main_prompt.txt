You are a professional developer. Below you will receive task descriptions from which you should generate an Ansible Playbook. Name the tasks exactly as I provide them here:

Task 1: Load OS-specific variables
Description Task 1: Include variables for the current OS distribution and family from files located in the 'vars' directory. If a specific file for the distribution or family does not exist, fall back to 'main.yml'.

Task 2: Include OS-specific setup tasks for RedHat
Description Task 2: If the OS family is 'RedHat', include tasks from 'setup-RedHat.yml'.

Task 3: Include OS-specific setup tasks for Debian
Description Task 3: If the OS family is 'Debian', include tasks from 'setup-Debian.yml'.

Task 4: Install Docker packages
Description Task 4: Install Docker packages, defined by the variable 'docker_packages', with a state defined by 'docker_packages_state'. Notify the handler 'restart docker' and ignore errors if in check mode. This task runs if Ansible version is less than 2.12 or the OS family is not 'RedHat' or 'Debian'.

Task 5: Install Docker packages with downgrade option
Description Task 5: Install Docker packages, defined by the variable 'docker_packages', with a state defined by 'docker_packages_state' and allow downgrade. Notify the handler 'restart docker' and ignore errors if in check mode. This task runs if Ansible version is 2.12 or higher and the OS family is 'RedHat' or 'Debian'.

Task 6: Install docker-compose plugin
Description Task 6: Install the docker-compose plugin, defined by the variable 'docker_compose_package', with a state defined by 'docker_compose_package_state'. Notify the handler 'restart docker' and ignore errors if in check mode. This task runs if 'docker_install_compose_plugin' is true and (Ansible version is less than 2.12 or the OS family is not 'RedHat' or 'Debian').

Task 7: Install docker-compose-plugin with downgrade option
Description Task 7: Install the docker-compose plugin, defined by the variable 'docker_compose_package', with a state defined by 'docker_compose_package_state' and allow downgrade. Notify the handler 'restart docker' and ignore errors if in check mode. This task runs if 'docker_install_compose_plugin' is true and (Ansible version is 2.12 or higher and the OS family is 'RedHat' or 'Debian').

Task 8: Ensure /etc/docker/ directory exists
Description Task 8: Ensure the directory /etc/docker/ exists with the mode 0755. This task runs if 'docker_daemon_options' is not empty.

Task 9: Configure Docker daemon options
Description Task 9: Copy the content of 'docker_daemon_options' to /etc/docker/daemon.json in JSON format with the mode 0644. Notify the handler 'restart docker' if the task runs. This task runs if 'docker_daemon_options' is not empty.

Task 10: Ensure Docker is started and enabled at boot
Description Task 10: Manage the Docker service to be in the state defined by 'docker_service_state' and enable it at boot if 'docker_service_enabled' is true. Ignore errors if in check mode. This task runs if 'docker_service_manage' is true.

Task 11: Ensure handlers are notified now to avoid firewall conflicts
Description Task 11: Flush handlers to ensure they run now and avoid potential firewall conflicts.

Task 12: Include docker-compose tasks
Description Task 12: If 'docker_install_compose' is true, include tasks from 'docker-compose.yml'.

Task 13: Get docker group info using getent
Description Task 13: If 'docker_users' is not empty, use getent to get information about the docker group.

Task 14: Check if there are any users to add to the docker group
Description Task 14: If 'docker_users' is not empty and there are users that are not yet part of the docker group, set a fact 'at_least_one_user_to_modify' to true.

Task 15: Include docker-users tasks
Description Task 15: If 'at_least_one_user_to_modify' is defined, include tasks from 'docker-users.yml'.
